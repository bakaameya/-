String常用方法：


length：标注字符串长度
indexOf：从左往右查找规定字符
lastIndexOf：从右往左查找规定字符，不过返回值为从左往右数的
substring：截取字符串，返回值可以为一个或者两个，取对象字符串的字串
startsWith：测试字符串是否以指定字符开头
endWith：是否以指定字符结尾
contains：是否包含指定字符串（可以用来验证输入）
replace：将指定字符替换为另外一个字符（两个参数，前者为原字符后者为替换字符）
toUpperCase：将字符串全部转换为大写
toLowerCase：将字符串全部转换为小写（可以用在输出输入上）
trim：将字符串中前后所有的空格都去掉（中间的不行）
compareTo：按照字典顺序比较两个字符串，从而比较两个各个字符之间的差值，然后返回结果。
越靠后的字符越大（z>a），大返回正数，小返回负数
StringBuffer安全（多线程），StringBuilder是不安全的

math类：
不需要创建对象实例化（和String不同），直接调用就可以（不需要引包）
abs：返回绝对值
max：求最大值（两个数中较大者，两个参数）
min：求较小值
PI：可以直接输入π的值，默认保留后面15位
random：随机数，取得随机数的值为0-1（取小数点后面15位）后面乘任意数取0-number的范围
默认是double类型，需要整数的话需要强转

包装方法：
MAX_VALUE：最大值
MIN_VALUE： 最小值
char类型返回的是数值对应的ascll码表的值
字符串转为各种基本类型的方法前面写（此处略）
parseInteger（“”，int ）两个参数//////////////////
如果直接接定义一个数据类型的对象（例如Integer），那么该对象就可以直接调用相应的基本类型所
拥有的方法（简化书写）[就是包装成了一个对象]
直接Integer integer = num；的话就是自动装箱，如果后续进行运算也可以自动拆箱
integer的equals方法是比较对象是否相同不是比较值
jdk在自动装箱的时候如果范围在一个byte之内，那么如果新创建的对象和原对象数值相等的话就不会创建
新的对象而直接引用之前的对象，否则会重新创建一个对象。

日期类：
导入util包
currentTimeMillis()返回的是一个精确的毫秒值
Date 类可以将具体的毫秒值转换成年月日时分秒的对象.(使用时要创建一个新的对象)
DateFormat  对象 = DateFormat.getDateInstance(可以在其中用DateFormat.格式来设置格式);
修饰符 对象  = 对象.format();//这样使用可以将时间转换成一个利于大家观看的额标准的时间格式
getdate或者calendar方法获取的月份都是从0开始的,所以实际月份要加一
getActualMaximum方法可以获取到本月的最大天数
calendar使用：get（calendar.字段）可以获取想要的时间。
