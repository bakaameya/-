导入其他包方法、数据等有两种方式
一是在 开头用import声明之后直接用正常方式调用
二是用包名.类名的方式创建一个对象之后，对象连带着类中的属性可以直接使用。
当然访问权限上来讲还是只能访问public的，private不能实现访问调用
protect的话跨包不能访问，其他都可以
不写修饰符默认权限是default，只能本包和类访问，子类和其他包不能够访问


内部类实例化：
外部类.内部类  实例名 = new 外部类().new 内部类();
内部类当需要描述的事物内部还有功能的时候就需要使用内部类
注意类是不加括号的，方法后面需要加括号（用来规定返回值）
静态内部类不能访问外部类的非静态成员。
一般静态内部类使用的时候是当外部类需要使用内部类，而内部类无需外部类资源
而且内部类可以单独创建的时候会考虑采用静态内部类的设计
当调用静态内部类的时候不用单独实例化内部类只需要用new 外部类.内部类()就行了[emmm和前面普通的等号左边还是相同的]
可以这样调用的原因:静态是随着类的加载而加载,之后就存在内存中,所以不是动态的不需要实例化调用

匿名内部类：
new method().inner();//创建方式和普通类实例化是一样的
当然如果你需要重写内部类
匿名内部类的使用方法：需要对外部类里面的方法进行重写的时候