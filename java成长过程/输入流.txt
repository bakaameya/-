package javaproject;

import java.util.Scanner;


public class Secend {
	public static void main(String[] args) {
		int a = 10;
		int b = 20;
		System.out.println("a+b="+(a+b));
//		逻辑与或的区别
//		当中间逻辑运算为&时,则无论怎样都会执行两边的程序;如果是&&时则左边为真时才会执行右边的程序,两者的真值表是相同的
//		逻辑或|时,两边的表达式都会执行,而||时如果左边的表达式真值为true,则右边表达式不会执行.
//		两者的相同点在于和普通的逻辑表达的真值是一样的,但是如果两边有表达式的话对表达式的处理不同(当仅仅是比较数字的时候两边就没区别了呗~>v<~)
//		Java标准输入流为scanner，用来接收输入数据[一个可以用正则表达式来解析的文本扫描器]
		Scanner str =new Scanner (System.in	);//需要声明java.util.Scanner包
//		String text = str.nextLine();//需要将输出存入到一个变量中用于输出
//		System.out.println(text);//其中next方法是从接收到第一个有效字符开始，到第一个分隔符结束，nextLine为一行的内容。
//		测试next方法功能
		String[] myList = new String[5];
		String text = str.nextLine();
		System.out.println(text);//这种方式空格也会当做字符被输出出来
		for(int i = 0;i<5;i++)//注意，java中for循环使用初始化必须在括号内完成，括号外完成报错
		{
			myList[i] = str.next();
		}
		for(int j = 0;j < 5;j++) {
			System.out.println(myList[j]);
		}//使用next方法和循环实现多个输入
		//想接收其他类型的数据就用next后面带相应的数据类型就可以了，记得驼峰法数据类型首字母要大写
		char charAt = str.next().charAt(0);//接收char类型的数据比较特殊需要用这种方式来接收
//		其中，At后面跟的数字是你接收到的字符串的下标，返回时只返回一个字符。
	}
}
