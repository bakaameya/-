java的异常是指代码逻辑的错误，是可以解决的错误。（exception）
异常的类型:
throwable{
	error();
	exception{
		ioexception()
		runtimeexception()
	}
}
如果控制台抛出的是error，那么则属于编译器级别的错误。通过普通的修改代码的方式是不能解决的。
throw new 抛出一个异常，抛出后后面的语句不会被执行
new一个异常对象，后面可以接异常类型之后括号中可以接自己定义的异常描述语句
自定义异常：
public class 类名 extends Throwable(){
	//中间为自定义的异常,可以抛出
	//等于实现了一个接口
}
运行时的异常(runtime包)不需要抛出或try  catch
但是如果一个方法没有捕获到一个检查性异常,就必须使用throw关键字来声明
throw后面括号中的内容是向上一级抛出的.
自定义异常类的时候必须有构造方法,通过super往上级抛出异常,这样才能显示自己定义的异常的内容

throw在方法内部抛出异常,throws在方法体上声明(在外面)可以抛出多个异常
格式:
try{
//想要检查的代码语句
}catch(异常类型  异常名(自定义) ){
	//错误语句
}
finally{
//一定会被执行的语句
}

当有多个catch时,父类必须写在后面(因为先写父类会包括子类异常,再写后面是无效的)